#BlueJ class context
comment0.target=RevistaOnLineJuegos
comment0.text=\r\n\ La\ clase\ representa\ a\ una\ tienda\ on-line\ en\ la\r\n\ que\ se\ publican\ los\ juegos\ que\ se\ van\ lanzando\ al\ mercado\r\n\ \r\n\ Un\ objeto\ de\ esta\ clase\ guarda\ en\ un\ array\ los\ juegos\ \r\n\r\n\ @author\ -\ Fermin\ Lanzas\r\n
comment1.params=nombre\ n
comment1.target=RevistaOnLineJuegos(java.lang.String,\ int)
comment1.text=\r\n\ Constructor\ \ \r\n\ Crea\ el\ array\ de\ juegos\ al\ tama\u00F1o\ m\u00E1ximo\ indicado\ por\ la\ constante\r\n\ e\ inicializa\ el\ resto\ de\ atributos\r\n
comment2.params=
comment2.target=boolean\ estaCompleta()
comment2.text=\r\n\ Devuelve\ true\ si\ el\ array\ est\u00E1\ completo,\ false\ en\ otro\ caso\r\n
comment3.params=juego
comment3.target=void\ add(Juego)
comment3.text=\r\n\ \ \ \ A\u00F1ade\ un\ nuevo\ juego\ solo\ si\ el\ array\ no\ est\u00E1\ completo\ y\ no\ existe\ otro\ juego\r\n\ \ \ \ ya\ con\ el\ mismo\ nombre.\ \ Si\ no\ se\ puede\ a\u00F1adir\ se\ muestra\ los\ mensajes\ adecuados\ \r\n\ \ \ \ (diferentes\ en\ cada\ caso)\r\n\ \ \ \ \r\n\ \ \ \ El\ juego\ se\ a\u00F1ade\ de\ tal\ forma\ que\ queda\ insertado\ en\ orden\ alfab\u00E9tico\ de\ t\u00EDtulo\r\n\ \ \ \ (de\ menor\ a\ mayor)\r\n\ \ \ \ \ \!\!OJO\!\!\ No\ hay\ que\ ordenar\ ni\ utilizar\ ning\u00FAn\ algoritmo\ de\ ordenaci\u00F3n\r\n\ \ \ \ Hay\ que\ insertar\ en\ orden\ \r\n\ \ \ \ \r\n
comment4.params=titulo
comment4.target=int\ existeJuego(java.lang.String)
comment4.text=\r\n\ Efect\u00FAa\ una\ b\u00FAsqueda\ en\ el\ array\ del\ juego\ cuyo\ titulo\ se\r\n\ recibe\ como\ par\u00E1metro.\ Es\ ndiferente\ may\u00FAsculas\ y\ min\u00FAsculas\r\n\ Si\ existe\ el\ juego\ devuelve\ su\ posici\u00F3n,\ si\ no\ existe\ devuelve\ -1\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Representaci\u00F3n\ textual\ de\ la\ revista\r\n\ Utiliza\ StringBuilder\ como\ clase\ de\ apoyo.\r\n\ Se\ incluye\ el\ nombre\ de\ la\ \ revista\ on-line.\r\n\ (Ver\ resultados\ de\ ejecuci\u00F3n)\r\n
comment6.params=titulo\ puntuacion
comment6.target=void\ puntuar(java.lang.String,\ int)
comment6.text=\r\n\ \ Se\ punt\u00FAa\ el\ juego\ de\ t\u00EDtulo\ indicado\ con\ \r\n\ \ la\ puntuaci\u00F3n\ recibida\ como\ par\u00E1metro.\ \r\n\ \ La\ puntuaci\u00F3n\ es\ un\ valor\ entre\ 1\ y\ 10\ (asumimos\ esto\ como\ correcto)\r\n\ \ Si\ el\ juego\ no\ existe\ se\ muestra\ un\ mensaje\ en\ pantalla\r\n
comment7.params=valoracion
comment7.target=java.lang.String[]\ valoracionMayorQue(double)
comment7.text=\r\n\ Devuelve\ un\ array\ con\ los\ nombres\ de\ los\ juegos\ \r\n\ con\ una\ valoraci\u00F3n\ media\ mayor\ a\ la\ indicada\ \ \r\n\ \r\n\ El\ array\ se\ devuelve\ todo\ en\ may\u00FAsculas\ y\ ordenado\ ascendentemente\r\n
comment8.params=genero
comment8.target=int\ borrarDeGenero(Genero)
comment8.text=\r\n\ Borrar\ los\ juegos\ del\ g\u00E9nero\ indicado\ devolviendo\r\n\ el\ n\u00BA\ de\ juegos\ borradas\r\n
comment9.params=
comment9.target=void\ leerDeFichero()
comment9.text=\r\n\ Lee\ de\ un\ fichero\ de\ texto\ los\ datos\ de\ los\ juegos\r\n\ con\ ayuda\ de\ un\ objeto\ de\ la\ \ clase\ Scanner\r\n\ y\ los\ guarda\ en\ el\ array.\ \r\n
numComments=10
